{"version":3,"file":"static/js/Contacts.93b62a09.chunk.js","mappings":"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","sources":["webpack://contacts-front/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","webpack://contacts-front/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://contacts-front/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://contacts-front/./src/components/IconButton/IconButton.module.css?34f6","components/IconButton/IconButton.jsx","webpack://contacts-front/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","webpack://contacts-front/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","views/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__RBtNK\"};","import PropTypes from \"prop-types\";\nimport s from \"./Button.module.css\";\nfunction Button({ text, onClick, type = \"button\", className }) {\n  return (\n    <button type={type} className={`${s.btn} ${className}`} onClick={onClick}>\n      {text}\n    </button>\n  );\n}\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  type: PropTypes.string,\n  className: PropTypes.string,\n};\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"edit\":\"ContactForm_edit__pQ0uo ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"labelEdit\":\"ContactForm_labelEdit__x6dts ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"inputEdit\":\"ContactForm_inputEdit__oTXNa ContactForm_input__Bl93P\",\"btn\":\"ContactForm_btn__wll+u\"};","import { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { useNavigate } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport {\n  useAddContactMutation,\n  useFetchContactsQuery,\n  useUpdateContactMutation,\n} from \"redux/contacts\";\nimport s from \"./ContactForm.module.css\";\nimport Button from \"components/Button\";\n\nfunction ContactForm({\n  type,\n  id,\n  initialName = \"\",\n  initialNumber = \"\",\n  setEdit,\n}) {\n  const [name, setName] = useState(initialName);\n  const [number, setNumber] = useState(initialNumber);\n  const navigate = useNavigate();\n  const { data } = useFetchContactsQuery();\n  const names = data?.map((contact) => contact.name);\n  const [addContact] = useAddContactMutation();\n  const [updateContact] = useUpdateContactMutation();\n  const handleInputChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        return;\n      case \"number\":\n        setNumber(value);\n        return;\n      default:\n        return;\n    }\n  };\n  const onAddContact = async (name, number) => {\n    if (names.includes(name)) {\n      toast.error(`${name} is already in contacts!`);\n      return;\n    }\n    const data = await addContact({ name, number }).unwrap();\n    if (data.id) {\n      toast.success(`${name} was added to contacts`);\n      navigate(\"/contacts\");\n    }\n    if (data.message)\n      toast.error(`Can't add ${name} to contacts, please try again`);\n  };\n  const onEditContact = async (name, number) => {\n    const data = await updateContact({ id, name, number }).unwrap();\n    if (data.id) {\n      toast.success(`${name} was successfully updated`);\n      navigate(\"/contacts\");\n    }\n    if (data.message) toast.error(`Can't update ${name}, please try again`);\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const name = e.target.name.value;\n    const number = e.target.number.value;\n    if (type === \"Add\") onAddContact(name, number);\n    if (type === \"Edit\") onEditContact(name, number);\n  };\n\n  return (\n    <form className={type === \"Add\" ? s.form : s.edit} onSubmit={handleSubmit}>\n      <label className={type === \"Add\" ? s.label : s.labelEdit}>\n        Name\n        <input\n          className={type === \"Add\" ? s.input : s.inputEdit}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          placeholder=\" \"\n          required\n          value={name}\n          onInput={handleInputChange}\n        />\n      </label>\n      <label className={type === \"Add\" ? s.label : s.labelEdit}>\n        Number\n        <input\n          className={type === \"Add\" ? s.input : s.inputEdit}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          placeholder=\" \"\n          required\n          value={number}\n          onInput={handleInputChange}\n        />\n      </label>\n      <span>\n        <button className={s.btn} type=\"submit\">\n          Save\n        </button>\n        {type === \"Edit\" && (\n          <Button text=\"Cancel\" onClick={() => setEdit(false)} />\n        )}\n      </span>\n    </form>\n  );\n}\nContactForm.propTypes = {\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string,\n  initialName: PropTypes.string,\n  initialNumber: PropTypes.string,\n  setEdit: PropTypes.func,\n};\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import { useSelector, useDispatch } from \"react-redux\";\nimport { changeFilter, getFilter } from \"redux/filter\";\nimport s from \"./Filter.module.css\";\n\nfunction Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const handleChange = (e) => {\n    const value = e.target.value;\n    dispatch(changeFilter(value));\n  };\n\n  return (\n    <div className={s.filter}>\n      <label className={s.label}>\n        Find contacts by Name\n        <input\n          className={s.input}\n          type=\"text\"\n          placeholder=\" \"\n          value={filter}\n          onChange={handleChange}\n        />\n      </label>\n    </div>\n  );\n}\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"IconButton_btn__PoeXD\"};","import {\n  AiFillPlusCircle,\n  AiFillCloseCircle,\n  AiOutlineEdit,\n  AiFillCheckCircle,\n} from \"react-icons/ai\";\nimport PropTypes from \"prop-types\";\nimport s from \"./IconButton.module.css\";\n\nfunction IconButton({ type = \"button\", icon, onClick }) {\n  switch (icon) {\n    case \"add\":\n      return (\n        <button\n          type={type}\n          className={s.btn}\n          aria-label=\"add contact\"\n          onClick={onClick}\n        >\n          <AiFillPlusCircle\n            style={{ width: \"40\", height: \"40\", color: \"green\" }}\n          />\n        </button>\n      );\n    case \"del\":\n      return (\n        <button\n          type={type}\n          className={s.btn}\n          aria-label=\"delete contact\"\n          onClick={onClick}\n        >\n          <AiFillCloseCircle\n            style={{ width: \"30\", height: \"30\", color: \"red\" }}\n          />\n        </button>\n      );\n    case \"edit\":\n      return (\n        <button\n          type={type}\n          className={s.btn}\n          aria-label=\"edit contact\"\n          onClick={onClick}\n        >\n          <AiOutlineEdit style={{ width: \"30\", height: \"30\", color: \"gray\" }} />\n        </button>\n      );\n    case \"ok\":\n      return (\n        <button\n          type={type}\n          className={s.btn}\n          aria-label=\"edit contact\"\n          onClick={onClick}\n        >\n          <AiFillCheckCircle\n            style={{ width: \"30\", height: \"30\", color: \"green\" }}\n          />\n        </button>\n      );\n    default:\n      return <button type={type} aria-label=\"button\"></button>;\n  }\n}\n\nIconButton.propTypes = {\n  type: PropTypes.string,\n  icon: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default IconButton;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactItem_item__gxreB\",\"name\":\"ContactItem_name__XjpNK\",\"number\":\"ContactItem_number__mfZ8x\",\"btns\":\"ContactItem_btns__vCBZ0\",\"btn\":\"ContactItem_btn__1h5dG\"};","import { useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport PropTypes from \"prop-types\";\nimport { useRemoveContactMutation } from \"redux/contacts\";\nimport ContactForm from \"components/ContactForm\";\nimport IconButton from \"components/IconButton\";\nimport s from \"./ContactItem.module.css\";\n\nfunction ContactItem({ name, number, id }) {\n  const [edit, setEdit] = useState(false);\n  const [removeContact, { isSuccess, isError }] = useRemoveContactMutation();\n  const onRemoveContact = () => {\n    removeContact(id);\n  };\n  useEffect(() => {\n    if (isSuccess) toast.info(`${name} was removed from contacts`);\n    if (isError)\n      toast.error(`Can't remove ${name} from contacts, please try again`);\n  }, [isSuccess, isError, name]);\n  if (edit)\n    return (\n      <li className={s.item}>\n        <ContactForm\n          type=\"Edit\"\n          setEdit={setEdit}\n          id={id}\n          initialName={name}\n          initialNumber={number}\n        />\n      </li>\n    );\n  if (!edit)\n    return (\n      <li className={s.item}>\n        <span className={s.name}>{name}</span>\n        <span className={s.number}>{number}</span>\n        <div className={s.btns}>\n          <IconButton icon=\"edit\" onClick={() => setEdit(true)} />\n          <IconButton icon=\"del\" onClick={onRemoveContact} />\n        </div>\n      </li>\n    );\n}\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\nexport default ContactItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","import { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useFetchContactsQuery } from \"redux/contacts\";\nimport { getFilter } from \"redux/filter\";\nimport { getIsLoggedIn } from \"redux/auth\";\nimport ContactItem from \"components/ContactItem\";\nimport Loader from \"components/Loader\";\nimport s from \"./ContactList.module.css\";\n\nfunction ContactList() {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  const { data, isFetching } = useFetchContactsQuery(null, {\n    skip: !isLoggedIn,\n  });\n  const filter = useSelector(getFilter)?.toLowerCase().trim();\n  const contacts = data?.filter(({ name }) =>\n    name.toLowerCase().includes(filter)\n  );\n  if (isFetching) return <Loader />;\n  return (\n    <Fragment>\n      <ul className={s.list}>\n        {contacts?.length > 0 &&\n          contacts.map(({ id, name, number }) => (\n            <ContactItem name={name} number={number} id={id} key={id} />\n          ))}\n      </ul>\n    </Fragment>\n  );\n}\nexport default ContactList;\n","import { Fragment } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Filter from \"components/Filter\";\nimport IconButton from \"components/IconButton/IconButton\";\nimport ContactList from \"components/ContactList\";\n\nfunction Contacts() {\n  const navigate = useNavigate();\n  const navigateToAdd = () => navigate(\"/add\");\n  return (\n    <Fragment>\n      <h2>Contacts</h2>\n      <IconButton icon=\"add\" onClick={navigateToAdd} />\n      <Filter />\n      <ContactList />\n    </Fragment>\n  );\n}\n\nexport default Contacts;\n"],"names":["text","onClick","type","className","s","id","initialName","initialNumber","setEdit","useState","name","setName","number","setNumber","navigate","useNavigate","data","useFetchContactsQuery","names","map","contact","useAddContactMutation","addContact","useUpdateContactMutation","updateContact","handleInputChange","e","target","value","onAddContact","includes","toast","unwrap","message","onEditContact","handleSubmit","preventDefault","onSubmit","pattern","title","placeholder","required","onInput","Button","filter","useSelector","getFilter","dispatch","useDispatch","onChange","changeFilter","icon","style","width","height","color","edit","useRemoveContactMutation","removeContact","isSuccess","isError","useEffect","ContactForm","isLoggedIn","getIsLoggedIn","skip","isFetching","toLowerCase","trim","contacts","Loader","Fragment","length"],"sourceRoot":""}